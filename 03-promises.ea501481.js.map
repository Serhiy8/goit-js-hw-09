{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAGtCH,EAAKC,KAAKM,iBAAiB,UAU3B,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,WAAEA,EAAUC,KAAEA,EAAIC,OAAEA,GAXd,WACZ,MAAMF,EAAaG,OAAOb,EAAKI,WAAWU,OACpCH,EAAOE,OAAOb,EAAKK,UAAUS,OAC7BF,EAASC,OAAOb,EAAKM,YAAYQ,OAEvC,MAAO,C,WAAEJ,E,KAAYC,E,OAAMC,E,CAMUG,GAErC,IAAIC,EAAaN,EAEjB,IAAK,IAAIO,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAChC3B,EAAc2B,EAAGD,GACdE,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjB2B,EAAA/B,GAASgC,OAAOC,QACd,uBAAqB9B,QAAiBC,MAAU,IAGnD8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClB2B,EAAA/B,GAASgC,OAAOG,QACd,sBAAoBhC,QAAeC,MAAU,IAInDwB,GAAcL,EAEhBX,EAAKC,KAAKuB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', startPromise); //Створюємо подію\n\nfunction getValues() {\n  const firstDelay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n  const amount = Number(refs.amountInput.value);\n\n  return { firstDelay, step, amount };\n}\n\nfunction startPromise(evt) {\n  evt.preventDefault();\n\n  const { firstDelay, step, amount } = getValues();\n\n  let startDelay = firstDelay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, startDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    startDelay += step;\n  }\n  refs.form.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","addEventListener","evt","preventDefault","firstDelay","step","amount","Number","value","$47d4ff9957288465$var$getValues","startDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.ea501481.js.map"}