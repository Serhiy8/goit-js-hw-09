{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAGtCH,EAAKC,KAAKM,iBAAiB,UAU3B,SAAsBC,GACpBA,EAAIC,iBAMJ,IAJA,IAAqCC,EAXzB,WACZ,IAAMC,EAAaC,OAAOZ,EAAKI,WAAWS,OACpCC,EAAOF,OAAOZ,EAAKK,UAAUQ,OAC7BE,EAASH,OAAOZ,EAAKM,YAAYO,OAEvC,MAAO,CAAEF,aAAYG,OAAMC,S,CAMUC,GAA7BL,EAA6BD,EAA7BC,WAAYG,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEtBE,EAAaN,EAERO,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChC5B,EAAc4B,EAAGD,GACdE,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAGjDiC,OAAM,SAAAL,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAjC,GAASkC,OAAOI,QACd,sBAAqCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAIjDyB,GAAcH,EAEhBd,EAAKC,KAAK0B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', startPromise); //Створюємо подію\n\nfunction getValues() {\n  const firstDelay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n  const amount = Number(refs.amountInput.value);\n\n  return { firstDelay, step, amount };\n}\n\nfunction startPromise(evt) {\n  evt.preventDefault();\n\n  const { firstDelay, step, amount } = getValues();\n\n  let startDelay = firstDelay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, startDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    startDelay += step;\n  }\n  refs.form.reset();\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","addEventListener","evt","preventDefault","ref","firstDelay","Number","value","step","amount","$ce04d3a99e08e73b$var$getValues","startDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.7889a659.js.map"}