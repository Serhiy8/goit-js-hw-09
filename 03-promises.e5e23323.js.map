{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBA4BtC,SAASI,EAAiBC,G,IAAEjB,EAAFiB,EAAEjB,SAAUC,EAAZgB,EAAYhB,MACpCiB,EAAArB,GAASsB,OAAOC,QAAQ,sBAAuCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,CAEvE,SAASqB,EAAeL,G,IAAEjB,EAAFiB,EAAEjB,SAAUC,EAAZgB,EAAYhB,MAClCiB,EAAArB,GAASsB,OAAOI,QAAQ,uBAAsCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,CA7BtEQ,EAAKC,KAAKc,iBAAiB,UAU3B,SAAsBC,GACpBA,EAAIC,iBAMJ,IAJA,IAAqCC,EAXzB,WACZ,IAAMC,EAAaC,OAAOpB,EAAKI,WAAWiB,OACpCC,EAAOF,OAAOpB,EAAKK,UAAUgB,OAC7BE,EAASH,OAAOpB,EAAKM,YAAYe,OAEvC,MAAO,CAAEF,aAAYG,OAAMC,S,CAMUC,GAA7BL,EAA6BD,EAA7BC,WAAYG,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEtBE,EAAaN,EAERO,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCpC,EAAcoC,EAAGD,GAAYE,KAAKd,GAAgBe,MAAMrB,GAExDkB,GAAcH,EAEhBtB,EAAKC,KAAK4B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', startPromise); //Створюємо подію\n\nfunction getValues() {\n  const firstDelay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n  const amount = Number(refs.amountInput.value);\n\n  return { firstDelay, step, amount };\n}\n\nfunction startPromise(evt) {\n  evt.preventDefault();\n\n  const { firstDelay, step, amount } = getValues();\n\n  let startDelay = firstDelay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, startDelay).then(onPromiseError).catch(onPromiseSuccess);\n\n    startDelay += step;\n  }\n  refs.form.reset();\n}\n\nfunction onPromiseSuccess({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\nfunction onPromiseError({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","$ce04d3a99e08e73b$var$onPromiseSuccess","param","$parcel$interopDefault","Notify","failure","concat","$ce04d3a99e08e73b$var$onPromiseError","success","addEventListener","evt","preventDefault","ref","firstDelay","Number","value","step","amount","$ce04d3a99e08e73b$var$getValues","startDelay","i","then","catch","reset"],"version":3,"file":"03-promises.e5e23323.js.map"}